@model IEnumerable<eIdeas.Models.Idea>
@using Microsoft.AspNetCore.Identity
@using eIdeas.Areas.Identity.Data
@inject SignInManager<eIdeasUser> SignInManager
@inject UserManager<eIdeasUser> UserManager
@{
    ViewData["Title"] = "Ideas";
}
<h3 class="display-4">Ideas</h3>
<p><a asp-action="Create" class="btn btn-primary btn-sm">Create New</a></p>
<form asp-controller="Ideas" asp-action="Index" method="get">
    <p>
        <div class="input-group mt-3 mb-3">
            <div class="input-group-prepend">
                <select name="SearchFilter" class="btn btn-primary dropdown-toggle btn-sm">
                    <option value="" selected disabled hidden>Filter</option>
                    <option value="ID">Idea Number</option>
                    <option value="Pending">Pending Ideas</option>
                    <option value="Plan">Planning Ideas</option>
                    <option value="Do">Do Ideas</option>
                    <option value="Check">Check Ideas</option>
                    <option value="Act">Act Ideas</option>
                    <option value="Park">Parked Ideas</option>
                    <option value="Abandon">Abandoned Ideas</option>
                    <option value="Subscribed">Subscribed</option>
                    <option value="TeamMember">By Team Member</option>
                    <option value="TeamName">By Team Name</option>
                </select>
            </div>
            <input type="text" name="SearchString" class="form-control" placeholder="Search">
            <div class="input-group-append">
                <input type="submit" class="btn btn-primary btn-sm" value="Search" />
            </div>
        </div>
    </p>
</form>
<p class="h4">All Ideas</p>
@foreach (var item in Model)
{
    <p></p>
    <div class="card">
        <div class="card-body">
            <div class="container">
                <p>Idea Number: @Html.DisplayFor(modelItem => item.ID)</p>
                <p><b>@Html.DisplayFor(modelItem => item.Name)</b></p>
                <p>@Html.DisplayFor(modelItem => item.Title)</p>
                <p>Status: @Html.DisplayFor(modelItem => item.Status)</p>
                <p>
                    @if (item.Status == "Pending")
                    {
                        <div class="progress">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width:20%">20%</div>
                        </div>
                    }
                    else if (item.Status == "Plan")
                    {
                        <div class="progress">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:40%">40%</div>
                        </div>
                    }
                    else if (item.Status == "Do")
                    {
                        <div class="progress">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width:60%">60%</div>
                        </div>
                    }
                    else if (item.Status == "Check")
                    {
                        <div class="progress">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100" style="width:80%">80%</div>
                        </div>
                    }
                    else if (item.Status == "Act")
                    {
                        <div class="progress">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%">100%</div>
                        </div>
                    }
                    else if (item.Status == "Park")
                    {
                        <div class="progress">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%">100%</div>
                        </div>
                    }
                    else if (item.Status == "Abandon")
                    {
                        <div class="progress">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%">100%</div>
                        </div>
                    }
                </p>
                <textarea rows="4" cols="50" placeholder="enter a comment"></textarea>
                <p><button type="button" onclick="alert('your comment has been submited')">Submit Comment</button></p>
                <p>
                    @if (item.Name == UserManager.GetUserAsync(User).Result.Firstname + " " + UserManager.GetUserAsync(User).Result.Lastname || UserManager.GetUserAsync(User).Result.Team == item.Team && UserManager.GetUserAsync(User).Result.Role.Contains("Manager"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit |</a>
                        <a asp-action="Details" asp-route-id="@item.ID">Details|</a>
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                    }
                </p>
            </div>
        </div>
    </div>
}