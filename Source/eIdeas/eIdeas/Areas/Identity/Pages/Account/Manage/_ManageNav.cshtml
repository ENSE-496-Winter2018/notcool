@inject SignInManager<eIdeasUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="btn-group-vertical">
    <div class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index" class="btn btn-outline-primary mx-auto" style="min-width:100%">Profile</a></div>
    <div class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword" class="btn btn-outline-primary mx-auto" style="min-width:100%">Password</a></div>
    @if (hasExternalLogins)
    {
        <div class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins" class="btn btn-outline-primary mx-auto" style="min-width:100%">External logins</a></div>
    }
    <div class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication" class="btn btn-outline-primary mx-auto" style="min-width:100%">Two-factor authentication</a></div>
    <div class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a asp-page="./PersonalData" class="btn btn-outline-primary mx-auto" style="min-width:100%">Personal data</a></div>
</div>
